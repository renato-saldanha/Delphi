unit Form.Principal;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics, Vcl.Controls,
  Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.Menus, Data.DB, Vcl.StdCtrls, Vcl.Mask, Vcl.Grids, Vcl.DBGrids, Vcl.Buttons,
  System.Actions, Vcl.ActnList, Vcl.ComCtrls, App.Interfaces;


type
  TFormPrincipal = class(TForm)
      [FieldBind('codigo', TBindType.btInteger, True)]
    LbeCodCliente: TLabeledEdit;
      [FieldBind('nome', TBindType.btString)]
    EdtNomeCliente: TEdit;
    CbxLimiteDias: TComboBox;
    CbxLimiteTamanho: TComboBox;
    CbxAtivo: TComboBox;
    MnuPrincipal: TMainMenu;
    PnlEstatisticas: TPanel;
    PnlEstatistica2: TPanel;
    PnlEstatistica: TPanel;
    DbgDados: TDBGrid;
    PnlCabecalho: TPanel;
    MnuCadastro: TMenuItem;
    MnuCadastrodeBackups: TMenuItem;
    Label1: TLabel;
    SpbCodigoCliente: TSpeedButton;
    BtnPesquisar: TBitBtn;
    BtnLimparCampos: TBitBtn;
    Lbl1: TLabel;
    Lbl2: TLabel;
    BtnSincronizarDadosInternos: TBitBtn;
    DscDados: TDataSource;
    Panel2: TPanel;
    Panel3: TPanel;
    Panel4: TPanel;
    Label2: TLabel;
    Label3: TLabel;
    Label5: TLabel;
    Label4: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    LblQtdeNormal: TLabel;
    LblQtdeTamanhoDiferente: TLabel;
    LblQtdeAtrasado: TLabel;
    LblTotal: TLabel;
    pm: TPopupMenu;
    AbrirlocalArquivo1: TMenuItem;
    StatusBar1: TStatusBar;
    procedure FormCreate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure DbgDadosDrawColumnCell(Sender: TObject; const Rect: TRect; DataCol: Integer; Column: TColumn;
      State: TGridDrawState);
    procedure LbeCodClienteKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure LbeCodClienteExit(Sender: TObject);
    procedure SpbCodigoClienteClick(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure BtnPesquisarClick(Sender: TObject);
    procedure BtnLimparCamposClick(Sender: TObject);
    procedure BtnSincronizarDadosInternosClick(Sender: TObject);
    procedure MnuCadastrodeBackupsClick(Sender: TObject);
    procedure AbrirlocalArquivo1Click(Sender: TObject);
    procedure LbeCodClienteEnter(Sender: TObject);
  private
    FController: iBackupController;
    procedure ExibirResultadoLblNormal(aValue: String);
    procedure ExibirResultadoLblQtdeAtrasado(aValue: String);
    procedure ExibirResultadoLblQtdeDiferente(aValue: String);
    procedure ExibirResultadoLblTotal(aValue: String);
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FormPrincipal: TFormPrincipal;

implementation

uses App.Enums, App.Util, App.Controller, Fontdata.Utils, Fontdata.BindForm, DMDados, Model.ClienteBackup,
  Form.Cadastro.BackupCliente;

{$R *.dfm}

procedure TFormPrincipal.FormCreate(Sender: TObject);
begin
  Application.CreateForm(TDataModuleDados, DataModuleDados);
  DataModuleDados.ConfiguraConexao;
  FController := TBackupController.New;
  ReportMemoryLeaksOnShutdown := True;
end;

procedure TFormPrincipal.FormShow(Sender: TObject);
begin
  TUtilsEnum.ListDescriptions<TLimiteDiasPesquisa>(CbxLimiteDias.Items);
  TUtilsEnum.ListDescriptions<TLimiteTamanhoPesquisa>(CbxLimiteTamanho.Items);
  TUtilsEnum.ListDescriptions<TAtivo>(CbxAtivo.Items);
  LimparCampos(Self, True);
end;

procedure TFormPrincipal.FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
begin
  case Key of
    VK_F5     : BtnPesquisarClick(nil);
    VK_F6     : BtnSincronizarDadosInternosClick(nil);
    Ord('L')  : if (Shift = [ssCtrl]) then BtnLimparCamposClick(nil);
  end;
end;

procedure TFormPrincipal.LbeCodClienteKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
begin
  case Key of
    VK_F8     : SpbCodigoClienteClick(nil);
    VK_RETURN : CbxLimiteDias.SetFocus;
  end;
end;

procedure TFormPrincipal.SpbCodigoClienteClick(Sender: TObject);
begin
  FController.Operacoes.PesquisarCliente(LbeCodCliente);
end;

procedure TFormPrincipal.LbeCodClienteEnter(Sender: TObject);
begin
  DataModuleDados.QryConsClienteBackupArquivos.Close;
  LbeCodCliente.Text         := '000000';
  EdtNomeCliente.Text        := 'TODOS';
  CbxLimiteDias.ItemIndex    := 0;
  CbxLimiteTamanho.ItemIndex := 0;
  CbxAtivo.ItemIndex         := 0;
end;

procedure TFormPrincipal.LbeCodClienteExit(Sender: TObject);
begin
  FController.Operacoes.FiltrarClienteBackup(LbeCodCliente, Self);
end;

procedure TFormPrincipal.BtnSincronizarDadosInternosClick(Sender: TObject);
begin
  FController.Operacoes.SincronizarListaClientesBackup;
  LimparCampos(Self, True);
  FController.Parametros
    .ZerarValores
    .DisplayQtdeNormal(ExibirResultadoLblNormal)
    .DisplayQtdeTamanhoDiferente(ExibirResultadoLblQtdeDiferente)
    .DisplayQtdeAtrasado(ExibirResultadoLblQtdeAtrasado)
    .DisplayTotalGeral(ExibirResultadoLblTotal);
end;

procedure TFormPrincipal.DbgDadosDrawColumnCell(Sender: TObject; const Rect: TRect; DataCol: Integer; Column: TColumn;
  State: TGridDrawState);
begin
  SetLegendaCorDBGridTelaPrincipal(DbgDados, Rect, DataCol, Column, State);
end;

procedure TFormPrincipal.MnuCadastrodeBackupsClick(Sender: TObject);
begin
  TFormCadastroBackupCliente.AbrirTela;
end;

procedure TFormPrincipal.AbrirlocalArquivo1Click(Sender: TObject);
begin
  AbrirLocalBancoDados(DbgDados);
end;

procedure TFormPrincipal.BtnLimparCamposClick(Sender: TObject);
begin
  LimparCampos(Self, True);
  FController.Parametros
    .ZerarValores
    .DisplayQtdeNormal(ExibirResultadoLblNormal)
    .DisplayQtdeTamanhoDiferente(ExibirResultadoLblQtdeDiferente)
    .DisplayQtdeAtrasado(ExibirResultadoLblQtdeAtrasado)
    .DisplayTotalGeral(ExibirResultadoLblTotal);
end;

procedure TFormPrincipal.BtnPesquisarClick(Sender: TObject);
var
  FClienteBackup: iClienteBackup;
begin
  FClienteBackup := TClienteBackup.Create;
  FClienteBackup
    .codigo(LbeCodCliente.Text)
    .nome(EdtNomeCliente.Text)
    .ativo(CbxAtivo.ItemIndex)
    .ClienteBackupArquivo
      .limite_dias(CbxLimiteDias.ItemIndex)
      .limite_tamanho(CbxLimiteTamanho.ItemIndex);

  FController
    .Parametros
      .ZerarValores
      .DisplayQtdeNormal(ExibirResultadoLblNormal)
      .DisplayQtdeTamanhoDiferente(ExibirResultadoLblQtdeDiferente)
      .DisplayQtdeAtrasado(ExibirResultadoLblQtdeAtrasado)
      .DisplayTotalGeral(ExibirResultadoLblTotal).&End
    .Operacoes
      .PesquisarClientesBackup(FClienteBackup)
      .CalcularTotais(DbgDados);
end;

procedure TFormPrincipal.ExibirResultadoLblNormal(aValue: String);
begin
  LblQtdeNormal.Caption := aValue;
end;

procedure TFormPrincipal.ExibirResultadoLblQtdeDiferente(aValue: String);
begin
  LblQtdeTamanhoDiferente.Caption := aValue;
end;

procedure TFormPrincipal.ExibirResultadoLblQtdeAtrasado(aValue: String);
begin
  LblQtdeAtrasado.Caption := aValue;
end;

procedure TFormPrincipal.ExibirResultadoLblTotal(aValue: String);
begin
  LblTotal.Caption := aValue;
end;

end.
