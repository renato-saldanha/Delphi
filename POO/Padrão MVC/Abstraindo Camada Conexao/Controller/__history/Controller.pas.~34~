unit Controller;

interface

uses
  Model.Connection.Interfaces, Controller.Interfaces, Data.DB, Model, Model.Connection.FireDac,
  Model.Connection.DBExpress;

type
  TController<T: class> = class(TInterfacedObject, IController)
  private
    FConnection: TCustomConnection;
  public
    constructor Create;
    destructor Destroy; override;
    class function New: IController;
    function DataSet: TCustomConnection;
  end;

implementation

{ TController }


constructor TController<T>.Create;
begin
  if (not Assigned(FConnection)) then
    FConnection := TModel<T>.New.Connection;

end;

destructor TController<T>.Destroy;
begin

  inherited;
end;

class function TController<T>.New: IController;
begin
  Result := TController<T>.Create;
end;

function TController<T>.DataSet: TCustomConnection;
begin
  Result := FConnection;
end;

end.
