unit Controller;

interface

uses
  Model.Connections.Interfaces, Controller.Interfaces, Data.DB, Model, Model.Connections.FireDac,
  Model.Connections.DBExpress;

type
  TController = class(TInterfacedObject, IController)
  private
    FDataSet: IModelConnectionsGeneric;
  public
    constructor Create;
    destructor Destroy; override;
    class function New: IController;
    function Connections: IModelConnectionsGeneric;
  end;

implementation

{ TController }


constructor TController.Create;
begin
  if (not Assigned(FDataSet)) then
    FDataSet := TModel.New.DataSet;
end;

destructor TController.Destroy;
begin

  inherited;
end;

class function TController.New: IController;
begin
  Result := TController.Create;
end;

function TController.DataSet: IModelConnectionsGeneric;
begin
  Result := FDataSet;
end;

end.
