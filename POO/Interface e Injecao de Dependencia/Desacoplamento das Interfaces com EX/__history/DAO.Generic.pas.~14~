unit DAO.Generic;

interface

uses
  Interfaces, System.SysUtils, DAO.RTTI;

type
  TDAOGeneric<T: class, constructor> = class(TInterfacedObject, iDAOInterface<T>)
  private
    FEntidade: T;
    FDisplay: TProc<string>;
  public
    constructor Create;
    destructor Destroy; override;
    class function New: iDAOInterface<T>;
    procedure Insert();
    procedure Delete();
    procedure Update();

    procedure Display(aValue: TProc<string>);

    function this: T;
  end;

implementation

{ TDAOGeneric<T> }

constructor TDAOGeneric<T>.Create;
begin
  FEntidade := T.Create;
end;

class function TDAOGeneric<T>.New: iDAOInterface<T>;
begin
  Result := Self.Create;
end;

function TDAOGeneric<T>.this: T;
begin
  Result := FEntidade;
end;

destructor TDAOGeneric<T>.Destroy;
begin
  FEntidade.Free;
  inherited;
end;

procedure TDAOGeneric<T>.Display(aValue: TProc<string>);
begin
  FDisplay := aValue;
end;

procedure TDAOGeneric<T>.Insert();
begin
  FDisplay(TDAORTTI.getInsertSQL<T>(FEntidade))
end;

procedure TDAOGeneric<T>.Delete();
begin
  FDisplay(TDAORTTI.getDeleteSQL<><T>(FEntidade))
end;

procedure TDAOGeneric<T>.Update();
begin
  FDisplay(TDAORTTI.getUpdateSQL<T>(FEntidade))
end;

end.
