unit Model.Cliente;

interface

uses
  Vcl.Dialogs;

type
  TCliente = class

  constructor Create;

  private
    FNome: String;
    FEndereco: String;
    FTelefone: String;
    FBairro: String;
    FCidade: string;

    procedure SetEndereco(const Value: String);
    procedure SetNome(const Value: String);
    procedure SetTelefone(const Value: String);
    procedure SetBairro(const Value: String);
    procedure SetCidade(const Value: string);

  public
    property Nome: String read FNome write SetNome;
    property Endereco: String read FEndereco write SetEndereco;
    property Telefone: String read FTelefone write SetTelefone;
    property Bairro: String read FBairro write SetBairro;
    property Cidade: string read FCidade write SetCidade;


  published
    procedure CadastrarCliente(Cliente: TCliente);
  end;

implementation

{ TCliente }

constructor TCliente.Create;
begin
  FCidade:= 'Cuiabá';
end;

procedure TCliente.SetBairro(const Value: String);
begin
  FBairro := Value;
end;

procedure TCliente.SetCidade(const Value: string);
begin
  FCidade := Value;
end;

procedure TCliente.SetEndereco(const Value: String);
begin
  FEndereco := Value;
end;

procedure TCliente.SetNome(const Value: String);
begin
  FNome := Value;
end;

procedure TCliente.SetTelefone(const Value: String);
begin
  FTelefone := Value;
end;

procedure TCliente.CadastrarCliente(Cliente: TCliente);
begin
  Cliente.Nome        := 'Renato';
  Cliente.Endereco    := 'Generial Irineu de Souza';
  Cliente.Bairro      := 'Duque de Caxias 2';
  Cliente.Telefone    := '(65) 99271-2774';

  ShowMessage('Nome: ' + Cliente.Nome + #13 +
              'Endereço: ' + Cliente.Endereco + #13 +
              'Bairro: ' + Cliente.Bairro + #13 +
              'Cidade: ' + Cliente.Cidade + #13 +
              'Telefone: ' + Cliente.Telefone)
end;

end.
