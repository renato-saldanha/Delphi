unit App.Parametros;

interface

uses
  App.Interfaces, System.SysUtils;

type
  TBackupParametros = class(TInterfacedObject, iBackupParametros)
  private
  public
    [weak]
    FParent: iBackupController;
    FQtdeNormal: Currency;
    FQtdeAtrasado: Currency;
    FQtdeTamanhoDiferente: Currency;
    FTotalGeral: Currency;
    FDisplay: TProc<String>;

    class function New(aParent : iBackupController): iBackupParametros;
    constructor Create(aParent: iBackupController);
    destructor Destroy; override;

    function Display(aValue: TProc<String>): iBackupParametros; overload;
    function Display: TProc<String>; overload;

    function QtdeNormal(aValue: Currency): iBackupParametros; overload;
    function QtdeNormal: String; overload;

    function QtdeAtrasado(aValue: Currency): iBackupParametros; overload;
    function QtdeAtrasado: String; overload;

    function QtdeTamanhoDiferente(aValue: Currency): iBackupParametros; overload;
    function QtdeTamanhoDiferente: String; overload;

    function TotalGeral(aValue: Currency): iBackupParametros; overload;
    function TotalGeral: String; overload;

    function ZerarValores: iBackupParametros;
    function &End: iBackupController;
  end;

implementation

{ TBackupParametros }

class function TBackupParametros.New(aParent: iBackupController): iBackupParametros;
begin
  Result := Self.Create(aParent);
end;

function TBackupParametros.&End: iBackupController;
begin
  Result := FParent;
end;

constructor TBackupParametros.Create(aParent: iBackupController);
begin
  FParent := aParent;
end;

destructor TBackupParametros.Destroy;
begin

  inherited;
end;

function TBackupParametros.Display: TProc<String>;
begin
  Result := FDisplay;
end;

function TBackupParametros.Display(aValue: TProc<String>): iBackupParametros;
begin
  Result := Self;
  FDisplay := aValue;
end;

function TBackupParametros.TotalGeral(aValue: Currency): iBackupParametros;
begin
  Result      := Self;
  FTotalGeral := aValue;
end;

function TBackupParametros.QtdeAtrasado(aValue: Currency): iBackupParametros;
begin
  Result           := Self;
  FQtdeAtrasado := aValue;
end;

function TBackupParametros.QtdeTamanhoDiferente(aValue: Currency): iBackupParametros;
begin
  Result              := Self;
  FQtdeTamanhoDiferente := aValue;
end;

function TBackupParametros.QtdeNormal(aValue: Currency): iBackupParametros;
begin
  Result       := Self;
  FQtdeNormal := aValue;
end;

function TBackupParametros.TotalGeral: String;
begin
  Result := CurrToStr(FTotalGeral);
end;

function TBackupParametros.ZerarValores: iBackupParametros;
begin
Result :+ Self;
  QtdeNormal(0);
  QtdeAtrasado(0);
  QtdeTamanhoDiferente(0);
  TotalGeral(0);
end;

function TBackupParametros.QtdeAtrasado: String;
begin
  Result := CurrToStr(FQtdeAtrasado);
end;

function TBackupParametros.QtdeTamanhoDiferente: String;
begin
  Result := CurrToStr(FQtdeTamanhoDiferente);
end;

function TBackupParametros.QtdeNormal: String;
begin
  Result := CurrToStr(FQtdeNormal);
end;

end.
